==============================================
		Our Single Container Setup Flow
==============================================

1)	Push code to github
2)	Travis automatically pull repo
3)	Travis builds an image, tests code
4)	Travis pushes code to AWS EB
5)	EB builds image, deploys it


================================================
		Multi Container Setup Flow
================================================

1)	Push code to github
2)	Travis automatically pulls repo
3)	Travis builds a test image, test code
4)	Travis builds prod image
5)	Travis pushes built prod images to Docker Hub
6)	Travis pushes project to AWS EB
7)	EB pulls images from Docker Hub, deploys


==================================================
					Travis Flow					
==================================================

1)	Specify docker as a dependency
2)	Build test version of React Project	---| We only have tests for the react project,
3)	Run tests							---| we could easily add tests for server and worker
4)	Build prod versions of all projects
5)	Push all to docker hub
6)	Tell Elastic Beanstalk to update


==================================================
				AWS Elastic Cache
==================================================

1)	Automatically creates and maintains Redis instances for you
2)	Super easy to scale
3)	Built in logging + maintenance
4)	Probably better security than what we can do
5)	Easier to migrate off of EB with

==================================================
		AWS Relational Database Service
==================================================

1)	Automatically creates and maintains Postgres instances for you
2)	Super easy to scale
3)	Built in logging + maintenance
4)	Probably better security than what we can do
5)	Automated backups and rollbacks
6)	Easier to migrate off of EB with


===============================================================
					Having sai all that
===============================================================
*)	You migh still want to know how to get your own DB running in a container in prod
*)	Our next project will use Redis + Postgres in containers